{"id":"../node_modules/parse-unit/index.js","dependencies":[{"name":"/home/rajshah9914/Desktop/personalwebsite/package.json","includedInParent":true,"mtime":1562866258613},{"name":"/home/rajshah9914/Desktop/personalwebsite/.babelrc","includedInParent":true,"mtime":1562866706181},{"name":"/home/rajshah9914/Desktop/personalwebsite/node_modules/parse-unit/package.json","includedInParent":true,"mtime":1560400950065}],"generated":{"js":"module.exports = function parseUnit(str, out) {\n    if (!out)\n        out = [ 0, '' ]\n\n    str = String(str)\n    var num = parseFloat(str, 10)\n    out[0] = num\n    out[1] = str.match(/[\\d.\\-\\+]*\\s*(.*)/)[1] || ''\n    return out\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/parse-unit/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/parse-unit/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}}],"sources":{"../node_modules/parse-unit/index.js":"module.exports = function parseUnit(str, out) {\n    if (!out)\n        out = [ 0, '' ]\n\n    str = String(str)\n    var num = parseFloat(str, 10)\n    out[0] = num\n    out[1] = str.match(/[\\d.\\-\\+]*\\s*(.*)/)[1] || ''\n    return out\n}"},"lineCount":10}},"error":null,"hash":"119511608dbd306792f23b3491a255c5","cacheData":{"env":{}}}